generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Customer {
  id        Int      @id @default(autoincrement())
  contact Contact?
  ticket Ticket[]
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Contact {
  id Int @id @default(autoincrement())
  customer Customer @relation(fields: [customerId], references: [id])
  customerId Int @unique
  phone String
  email String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Movie{
  id Int @id @default(autoincrement())
  screening Screening[]
  title String
  runtimeMins Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Screening{
  id Int @id @default(autoincrement())
  startsAt DateTime
  movie Movie? @relation(fields: [movieId], references: [id])
  screen Screen? @relation(fields: [screenId], references: [id])
  screenId Int? 
  movieId Int? 
  ticket Ticket[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Screen{
  id Int @id @default(autoincrement())
  screening Screening[]
  number Int @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Ticket{
  id Int @id @default(autoincrement())
  customer Customer? @relation(fields: [customerId], references: [id])
  screening Screening? @relation(fields: [screeningId], references: [id])
  customerId Int 
  screeningId Int 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}